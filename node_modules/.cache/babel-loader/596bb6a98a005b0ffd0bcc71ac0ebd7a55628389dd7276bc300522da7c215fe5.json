{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect,useCallback}from\"react\";import{safeLocalStorage}from\"../utils/safeLocalStorage\";import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[isDark,setIsDark]=useState(false);const[isMounted,setIsMounted]=useState(false);// Initialize theme from localStorage or system preference\nuseEffect(()=>{setIsMounted(true);// Only run on client side\nconst savedTheme=safeLocalStorage.getItem(\"theme\");const prefersDark=typeof window!=='undefined'?window.matchMedia(\"(prefers-color-scheme: dark)\").matches:false;setIsDark(savedTheme?savedTheme===\"dark\":prefersDark);},[]);// Update DOM and localStorage when theme changes\nuseEffect(()=>{if(!isMounted||typeof window==='undefined')return;const root=document.documentElement;if(isDark){root.classList.add(\"dark\");document.body.style.backgroundColor='#1a202c';// Dark background\n}else{root.classList.remove(\"dark\");document.body.style.backgroundColor='#ffffff';// Light background\n}// Update localStorage\nsafeLocalStorage.setItem(\"theme\",isDark?\"dark\":\"light\");},[isDark,isMounted]);const toggleTheme=useCallback(()=>{setIsDark(prev=>!prev);},[]);// Prevent hydration mismatch by only rendering children when mounted\nif(!isMounted){return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDark:false,toggleTheme},children:/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-white dark:bg-gray-900\"})});}return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDark,toggleTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error(\"useTheme must be used within a ThemeProvider\");}return context;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}