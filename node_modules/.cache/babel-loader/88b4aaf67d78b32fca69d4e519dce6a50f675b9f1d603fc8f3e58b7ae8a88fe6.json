{"ast":null,"code":"import _objectSpread from\"C:/Users/arvin/OneDrive/Desktop/project2/alumni-verse/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback,useMemo}from'react';// ADDED useMemo\nimport{Search,Send,MoreVertical,ArrowLeft,GraduationCap}from'lucide-react';import{useAuth}from'../context/AuthContext';import{useSearchParams,useLocation,useNavigate}from'react-router-dom';import apiClient from'../utils/api';import{API_CONFIG}from'../config/config';import io from'socket.io-client';import{format}from'date-fns';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const toTitleCase=str=>{if(!str)return'';return str.replace(/\\w\\S*/g,txt=>txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase());};const uniqueById=arr=>{const seen=new Set();return arr.filter(item=>{if(!item||!item._id)return false;const id=String(item._id);if(seen.has(id))return false;seen.add(id);return true;});};const Chat=()=>{var _location$state4,_selectedConversation;const{user:currentUser,token}=useAuth();const[searchParams,setSearchParams]=useSearchParams();const location=useLocation();const navigate=useNavigate();const[conversations,setConversations]=useState([]);const[selectedConversation,setSelectedConversation]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[searchQuery,setSearchQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[loading,setLoading]=useState(true);const handledUserParamRef=useRef(false);const socketRef=useRef(null);const messagesEndRef=useRef(null);const fetchConversations=useCallback(async()=>{setLoading(true);try{const res=await apiClient.get(API_CONFIG.CHAT.CONVERSATIONS);if(res.success){var _res$data;const conversationsData=((_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.data)||res.data||[];const uniqueConversations=uniqueById(conversationsData);setConversations(uniqueConversations);return uniqueConversations;}}catch(error){console.error(\"Failed to fetch conversations\",error);}finally{setLoading(false);}return[];},[]);useEffect(()=>{fetchConversations();},[fetchConversations]);const createOrOpenConversation=useCallback(async userId=>{try{if(String(userId)===String(currentUser===null||currentUser===void 0?void 0:currentUser._id)){console.warn('Attempted to start a conversation with self; ignoring.');return null;}const res=await apiClient.post(API_CONFIG.CHAT.CREATE_CONVERSATION,{recipientId:userId});if(res.success){var _res$data2;const conv=((_res$data2=res.data)===null||_res$data2===void 0?void 0:_res$data2.data)||res.data;setSelectedConversation(conv);setConversations(prev=>{const existing=prev.find(c=>String(c._id)===String(conv._id));if(existing){const filtered=prev.filter(c=>String(c._id)!==String(conv._id));return[conv,...filtered];}return[conv,...prev];});return conv;}}catch(error){console.error('Error creating/opening conversation',error);}return null;},[currentUser===null||currentUser===void 0?void 0:currentUser._id]);// FIXED: Added missing dependency\nuseEffect(()=>{var _location$state;const userId=searchParams.get('user')||((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.user);if(!userId)return;if(!currentUser)return;if(handledUserParamRef.current)return;if(loading)return;handledUserParamRef.current=true;const existingConversation=conversations.find(conv=>Array.isArray(conv.participants)&&conv.participants.some(p=>String(p._id)===String(userId)));if(existingConversation){var _location$state2;setSelectedConversation(existingConversation);setSearchParams({});if((_location$state2=location.state)!==null&&_location$state2!==void 0&&_location$state2.user){navigate(location.pathname,{replace:true,state:{}});}return;}(async()=>{const conv=await createOrOpenConversation(userId);if(conv){var _location$state3;setSearchParams({});if((_location$state3=location.state)!==null&&_location$state3!==void 0&&_location$state3.user){navigate(location.pathname,{replace:true,state:{}});}}else{handledUserParamRef.current=false;}})();},[searchParams,currentUser,conversations,loading,createOrOpenConversation,setSearchParams,location.pathname,(_location$state4=location.state)===null||_location$state4===void 0?void 0:_location$state4.user,navigate]);useEffect(()=>{if(!token)return;if(socketRef.current){try{if(socketRef.current.connected){socketRef.current.disconnect();}else{socketRef.current.close();}}catch(e){// no-op\n}}const newSocket=io(API_CONFIG.BASE_URL,{auth:{token},transports:['websocket','polling'],reconnection:true,reconnectionAttempts:5});socketRef.current=newSocket;newSocket.on('connect',()=>{console.log('Socket connected');if(currentUser!==null&&currentUser!==void 0&&currentUser._id){newSocket.emit('join',\"user_\".concat(currentUser._id));}});newSocket.on('newMessage',message=>{if(selectedConversation&&String(message.conversationId)===String(selectedConversation._id)){setMessages(prev=>{const exists=prev.find(m=>String(m._id)===String(message._id));if(exists)return prev;return[...prev,message];});}});newSocket.on('updateConversation',updatedConv=>{setConversations(prev=>{const existing=prev.find(c=>String(c._id)===String(updatedConv._id));if(existing){const filtered=prev.filter(c=>String(c._id)!==String(updatedConv._id));return[updatedConv,...filtered];}return[updatedConv,...prev];});if(selectedConversation&&String(selectedConversation._id)===String(updatedConv._id)){setSelectedConversation(updatedConv);}});return()=>{if(newSocket){try{newSocket.off('newMessage');newSocket.off('updateConversation');if(newSocket.connected){newSocket.disconnect();}else{newSocket.close();}}catch(e){// no-op\n}}};// FIXED: This is the source of the \"same name\" bug.\n// The socket event listeners inside this hook need to know about the currently selected chat.\n// Without `selectedConversation` in the array, the listeners only ever know the *initial* value (which is null),\n// causing them to fail or misbehave on real-time updates.\n},[token,currentUser===null||currentUser===void 0?void 0:currentUser._id,selectedConversation]);useEffect(()=>{if(!selectedConversation){setMessages([]);return;}const fetchMessages=async()=>{try{const res=await apiClient.get(\"\".concat(API_CONFIG.CHAT.CONVERSATIONS,\"/\").concat(selectedConversation._id,\"/messages\"));if(res.success){var _res$data3;const messagesData=((_res$data3=res.data)===null||_res$data3===void 0?void 0:_res$data3.data)||res.data||[];setMessages(messagesData);}}catch(err){console.error(\"Failed to fetch messages\",err);setMessages([]);}};fetchMessages();if(socketRef.current){socketRef.current.emit('join',\"conversation_\".concat(selectedConversation._id));}return()=>{if(socketRef.current){socketRef.current.emit('leave',\"conversation_\".concat(selectedConversation._id));}};},[selectedConversation]);useEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);useEffect(()=>{if(searchQuery.trim()===''){setSearchResults([]);return;}const delay=setTimeout(async()=>{if(!currentUser)return;try{const res=await apiClient.get(\"\".concat(API_CONFIG.USERS.SEARCH,\"?q=\").concat(encodeURIComponent(searchQuery)));if(res.success){var _res$data4,_res$data5;const searchData=((_res$data4=res.data)===null||_res$data4===void 0?void 0:_res$data4.data)||((_res$data5=res.data)===null||_res$data5===void 0?void 0:_res$data5.users)||res.data||[];const results=searchData.filter(u=>String(u._id)!==String(currentUser._id));setSearchResults(uniqueById(results));}}catch(err){console.error(\"Search users error\",err);}},300);return()=>clearTimeout(delay);},[searchQuery,currentUser]);const handleSendMessage=async()=>{if(!newMessage.trim()||!selectedConversation||!currentUser)return;const tempId=\"temp_\".concat(Date.now());const optimisticMessage={_id:tempId,conversationId:selectedConversation._id,sender:{_id:currentUser._id,name:currentUser.name,profileImage:currentUser.profileImage},text:newMessage.trim(),createdAt:new Date().toISOString()};setMessages(prev=>[...prev,optimisticMessage]);setNewMessage('');try{const res=await apiClient.post(\"\".concat(API_CONFIG.CHAT.CONVERSATIONS,\"/\").concat(selectedConversation._id,\"/messages\"),{text:optimisticMessage.text});if(res.success){var _res$data6;const realMessage=((_res$data6=res.data)===null||_res$data6===void 0?void 0:_res$data6.data)||res.data;setMessages(prev=>{return prev.map(m=>m._id===tempId?realMessage:m);});setConversations(prev=>{const updatedConv=_objectSpread(_objectSpread({},selectedConversation),{},{lastMessage:realMessage,updatedAt:new Date().toISOString()});const filtered=prev.filter(c=>String(c._id)!==String(selectedConversation._id));return[updatedConv,...filtered];});setSelectedConversation(prev=>_objectSpread(_objectSpread({},prev),{},{lastMessage:realMessage,updatedAt:new Date().toISOString()}));}else{setMessages(prev=>prev.filter(m=>m._id!==tempId));}}catch(error){console.error(\"Failed to send message\",error);setMessages(prev=>prev.filter(m=>m._id!==tempId));}};const handleSelectUser=async selectedUser=>{setSearchQuery('');setSearchResults([]);await createOrOpenConversation(selectedUser._id);};// FIXED: Memoized sorting to improve performance\nconst sortedConversations=useMemo(()=>{return uniqueById(conversations).sort((a,b)=>{var _a$lastMessage,_b$lastMessage;const aTime=((_a$lastMessage=a.lastMessage)===null||_a$lastMessage===void 0?void 0:_a$lastMessage.createdAt)||a.updatedAt||a.createdAt;const bTime=((_b$lastMessage=b.lastMessage)===null||_b$lastMessage===void 0?void 0:_b$lastMessage.createdAt)||b.updatedAt||b.createdAt;return new Date(bTime)-new Date(aTime);});},[conversations]);if(!currentUser)return null;const recipient=selectedConversation===null||selectedConversation===void 0?void 0:(_selectedConversation=selectedConversation.participants)===null||_selectedConversation===void 0?void 0:_selectedConversation.find(p=>String(p._id)!==String(currentUser._id));return(/*#__PURE__*/// JSX remains exactly the same as your original, just uses 'sortedConversations'\n_jsxs(\"div\",{className:\"flex h-[calc(100vh-64px)] w-full bg-white dark:bg-gray-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 xl:w-1/4 border-r border-gray-200 dark:border-gray-700 flex-col \".concat(selectedConversation?'hidden lg:flex':'flex'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-gray-100\",children:\"Alumni Network\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"Connect with fellow graduates\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative mt-4\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search alumni...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),className:\"w-full p-2 pl-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto\",children:searchQuery?/*#__PURE__*/_jsx(_Fragment,{children:searchResults.length>0?searchResults.map(userResult=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectUser(userResult),className:\"p-4 flex items-center gap-4 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\",children:[/*#__PURE__*/_jsx(\"img\",{src:userResult.profileImage||\"https://ui-avatars.com/api/?name=\".concat(encodeURIComponent(userResult.name),\"&background=random\"),alt:userResult.name,className:\"w-12 h-12 rounded-full object-cover\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 dark:text-gray-100\",children:toTitleCase(userResult.name)}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[userResult.batch||'',\" \",userResult.branch||'']})]})]},userResult._id)):/*#__PURE__*/_jsx(\"p\",{className:\"p-4 text-sm text-gray-500\",children:\"No results\"})}):sortedConversations.map(conv=>{var _conv$participants,_conv$lastMessage$sen;const otherParticipant=(_conv$participants=conv.participants)===null||_conv$participants===void 0?void 0:_conv$participants.find(p=>String(p._id)!==String(currentUser._id));if(!otherParticipant)return null;const isSelected=selectedConversation&&String(selectedConversation._id)===String(conv._id);return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>setSelectedConversation(conv),className:\"p-4 flex items-center gap-4 cursor-pointer \".concat(isSelected?'bg-blue-600':'hover:bg-gray-100 dark:hover:bg-gray-700'),children:[/*#__PURE__*/_jsx(\"img\",{src:otherParticipant.profileImage||\"https://ui-avatars.com/api/?name=\".concat(encodeURIComponent(otherParticipant.name),\"&background=random\"),alt:otherParticipant.name,className:\"w-12 h-12 rounded-full object-cover\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold truncate \".concat(isSelected?'text-white':'text-gray-900 dark:text-gray-100'),children:toTitleCase(otherParticipant.name)}),conv.lastMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-right mt-1 \".concat(isSelected?'text-blue-200':'text-gray-500 dark:text-gray-400'),children:format(new Date(conv.lastMessage.createdAt),\"p\")})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm truncate \".concat(isSelected?'text-blue-100':'text-gray-500 dark:text-gray-400'),children:conv.lastMessage?\"\".concat(String((_conv$lastMessage$sen=conv.lastMessage.sender)===null||_conv$lastMessage$sen===void 0?void 0:_conv$lastMessage$sen._id)===String(currentUser._id)?\"You: \":\"\").concat(conv.lastMessage.text):\"No messages yet\"})]})]},conv._id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex-col \".concat(selectedConversation?'flex':'hidden lg:flex'),children:selectedConversation&&recipient?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedConversation(null),className:\"lg:hidden p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\",children:/*#__PURE__*/_jsx(ArrowLeft,{className:\"w-5 h-5 text-gray-600 dark:text-gray-300\"})}),/*#__PURE__*/_jsx(\"img\",{src:recipient.profileImage||\"https://ui-avatars.com/api/?name=\".concat(encodeURIComponent(recipient.name),\"&background=random\"),alt:recipient.name,className:\"w-10 h-10 rounded-full object-cover\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-semibold text-gray-900 dark:text-gray-100\",children:toTitleCase(recipient.name)}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[recipient.batch||'',\" \",recipient.branch||'']})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\",children:/*#__PURE__*/_jsx(MoreVertical,{className:\"w-5 h-5 text-gray-600 dark:text-gray-400\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto space-y-4\",children:[messages.map(message=>{var _message$sender;const isMine=String((_message$sender=message.sender)===null||_message$sender===void 0?void 0:_message$sender._id)===String(currentUser._id);return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-end w-full gap-2 \".concat(isMine?'justify-end':'justify-start'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xs lg:max-w-md p-3 rounded-2xl \".concat(isMine?'bg-blue-500 text-white rounded-br-none':'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border dark:border-gray-600 rounded-bl-none'),children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:message.text}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-right mt-1 \".concat(isMine?'text-blue-200':'text-gray-400 dark:text-gray-500'),children:format(new Date(message.createdAt),'p')})]})},message._id);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&!e.shiftKey&&(e.preventDefault(),handleSendMessage()),placeholder:\"Type a message...\",className:\"flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-2xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\",rows:1}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!newMessage.trim(),className:\"p-3 rounded-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white disabled:opacity-50 disabled:cursor-not-allowed\",children:/*#__PURE__*/_jsx(Send,{className:\"w-5 h-5\"})})]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-900\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-8\",children:[/*#__PURE__*/_jsx(GraduationCap,{className:\"w-24 h-24 mx-auto mb-6 text-blue-300 dark:text-blue-700\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800 dark:text-gray-100\",children:\"Welcome to Alumni Network\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Select a conversation or search for an alum to start chatting.\"})]})})})]}));};export default Chat;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}