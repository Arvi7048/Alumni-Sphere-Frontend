{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\arvin\\\\OneDrive\\\\Desktop\\\\project2\\\\alumni-verse\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport { safeLocalStorage } from \"../utils/safeLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDark, setIsDark] = useState(false);\n  const [isMounted, setIsMounted] = useState(false);\n\n  // Initialize theme from localStorage or system preference\n  useEffect(() => {\n    setIsMounted(true);\n\n    // Only run on client side\n    const savedTheme = safeLocalStorage.getItem(\"theme\");\n    const prefersDark = typeof window !== 'undefined' ? window.matchMedia(\"(prefers-color-scheme: dark)\").matches : false;\n    setIsDark(savedTheme ? savedTheme === \"dark\" : prefersDark);\n  }, []);\n\n  // Update DOM and localStorage when theme changes\n  useEffect(() => {\n    if (!isMounted || typeof window === 'undefined') return;\n    const root = document.documentElement;\n    if (isDark) {\n      root.classList.add(\"dark\");\n      document.body.style.backgroundColor = '#1a202c'; // Dark background\n    } else {\n      root.classList.remove(\"dark\");\n      document.body.style.backgroundColor = '#ffffff'; // Light background\n    }\n\n    // Update localStorage\n    safeLocalStorage.setItem(\"theme\", isDark ? \"dark\" : \"light\");\n  }, [isDark, isMounted]);\n  const toggleTheme = useCallback(() => {\n    setIsDark(prev => !prev);\n  }, []);\n\n  // Prevent hydration mismatch by only rendering children when mounted\n  if (!isMounted) {\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        isDark: false,\n        toggleTheme\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen bg-white dark:bg-gray-900\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"UQVn8GelEPMThcZDO4QiKRsmyoQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","useCallback","safeLocalStorage","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","isDark","setIsDark","isMounted","setIsMounted","savedTheme","getItem","prefersDark","window","matchMedia","matches","root","document","documentElement","classList","add","body","style","backgroundColor","remove","setItem","toggleTheme","prev","Provider","value","className","fileName","lineNumber","columnNumber","_c","useTheme","context","Error","$RefreshReg$"],"sources":["C:/Users/arvin/OneDrive/Desktop/project2/alumni-verse/frontend/src/context/ThemeContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, useCallback } from \"react\"\nimport { safeLocalStorage } from \"../utils/safeLocalStorage\"\n\nconst ThemeContext = createContext()\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(false)\n  const [isMounted, setIsMounted] = useState(false)\n\n  // Initialize theme from localStorage or system preference\n  useEffect(() => {\n    setIsMounted(true)\n    \n    // Only run on client side\n    const savedTheme = safeLocalStorage.getItem(\"theme\")\n    const prefersDark = typeof window !== 'undefined' \n      ? window.matchMedia(\"(prefers-color-scheme: dark)\").matches \n      : false\n    \n    setIsDark(savedTheme ? savedTheme === \"dark\" : prefersDark)\n  }, [])\n\n  // Update DOM and localStorage when theme changes\n  useEffect(() => {\n    if (!isMounted || typeof window === 'undefined') return\n    \n    const root = document.documentElement\n    \n    if (isDark) {\n      root.classList.add(\"dark\")\n      document.body.style.backgroundColor = '#1a202c' // Dark background\n    } else {\n      root.classList.remove(\"dark\")\n      document.body.style.backgroundColor = '#ffffff' // Light background\n    }\n    \n    // Update localStorage\n    safeLocalStorage.setItem(\"theme\", isDark ? \"dark\" : \"light\")\n  }, [isDark, isMounted])\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(prev => !prev)\n  }, [])\n\n  // Prevent hydration mismatch by only rendering children when mounted\n  if (!isMounted) {\n    return (\n      <ThemeContext.Provider value={{ isDark: false, toggleTheme }}>\n        <div className=\"min-h-screen bg-white dark:bg-gray-900\" />\n      </ThemeContext.Provider>\n    )\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}