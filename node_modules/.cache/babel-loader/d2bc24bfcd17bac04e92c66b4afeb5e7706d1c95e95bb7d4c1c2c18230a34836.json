{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arvin\\\\OneDrive\\\\Desktop\\\\project2\\\\alumni-verse\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'; // ADDED useMemo\nimport { Search, Send, MoreVertical, ArrowLeft, GraduationCap } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom';\nimport apiClient from '../utils/api';\nimport { API_CONFIG } from '../config/config';\nimport io from 'socket.io-client';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst toTitleCase = str => {\n  if (!str) return '';\n  return str.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n};\nconst uniqueById = arr => {\n  const seen = new Set();\n  return arr.filter(item => {\n    if (!item || !item._id) return false;\n    const id = String(item._id);\n    if (seen.has(id)) return false;\n    seen.add(id);\n    return true;\n  });\n};\nconst Chat = () => {\n  _s();\n  var _location$state4, _selectedConversation;\n  const {\n    user: currentUser,\n    token\n  } = useAuth();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handledUserParamRef = useRef(false);\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const fetchConversations = useCallback(async () => {\n    setLoading(true);\n    try {\n      const res = await apiClient.get(API_CONFIG.CHAT.CONVERSATIONS);\n      if (res.success) {\n        var _res$data;\n        const conversationsData = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data) || res.data || [];\n        const uniqueConversations = uniqueById(conversationsData);\n        setConversations(uniqueConversations);\n        return uniqueConversations;\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch conversations\", error);\n    } finally {\n      setLoading(false);\n    }\n    return [];\n  }, []);\n  useEffect(() => {\n    fetchConversations();\n  }, [fetchConversations]);\n  const createOrOpenConversation = useCallback(async userId => {\n    try {\n      if (String(userId) === String(currentUser === null || currentUser === void 0 ? void 0 : currentUser._id)) {\n        console.warn('Attempted to start a conversation with self; ignoring.');\n        return null;\n      }\n      const res = await apiClient.post(API_CONFIG.CHAT.CREATE_CONVERSATION, {\n        recipientId: userId\n      });\n      if (res.success) {\n        var _res$data2;\n        const conv = ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.data) || res.data;\n        setSelectedConversation(conv);\n        setConversations(prev => {\n          const existing = prev.find(c => String(c._id) === String(conv._id));\n          if (existing) {\n            const filtered = prev.filter(c => String(c._id) !== String(conv._id));\n            return [conv, ...filtered];\n          }\n          return [conv, ...prev];\n        });\n        return conv;\n      }\n    } catch (error) {\n      console.error('Error creating/opening conversation', error);\n    }\n    return null;\n  }, [currentUser === null || currentUser === void 0 ? void 0 : currentUser._id]); // FIXED: Added missing dependency\n\n  useEffect(() => {\n    var _location$state;\n    const userId = searchParams.get('user') || ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user);\n    if (!userId) return;\n    if (!currentUser) return;\n    if (handledUserParamRef.current) return;\n    if (loading) return;\n    handledUserParamRef.current = true;\n    const existingConversation = conversations.find(conv => Array.isArray(conv.participants) && conv.participants.some(p => String(p._id) === String(userId)));\n    if (existingConversation) {\n      var _location$state2;\n      setSelectedConversation(existingConversation);\n      setSearchParams({});\n      if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.user) {\n        navigate(location.pathname, {\n          replace: true,\n          state: {}\n        });\n      }\n      return;\n    }\n    (async () => {\n      const conv = await createOrOpenConversation(userId);\n      if (conv) {\n        var _location$state3;\n        setSearchParams({});\n        if ((_location$state3 = location.state) !== null && _location$state3 !== void 0 && _location$state3.user) {\n          navigate(location.pathname, {\n            replace: true,\n            state: {}\n          });\n        }\n      } else {\n        handledUserParamRef.current = false;\n      }\n    })();\n  }, [searchParams, currentUser, conversations, loading, createOrOpenConversation, setSearchParams, location.pathname, (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.user, navigate]);\n  useEffect(() => {\n    if (!token) return;\n    if (socketRef.current) {\n      try {\n        if (socketRef.current.connected) {\n          socketRef.current.disconnect();\n        } else {\n          socketRef.current.close();\n        }\n      } catch (e) {\n        // no-op\n      }\n    }\n    const newSocket = io(API_CONFIG.BASE_URL, {\n      auth: {\n        token\n      },\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5\n    });\n    socketRef.current = newSocket;\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n      if (currentUser !== null && currentUser !== void 0 && currentUser._id) {\n        newSocket.emit('join', `user_${currentUser._id}`);\n      }\n    });\n    newSocket.on('newMessage', message => {\n      if (selectedConversation && String(message.conversationId) === String(selectedConversation._id)) {\n        setMessages(prev => {\n          const exists = prev.find(m => String(m._id) === String(message._id));\n          if (exists) return prev;\n          return [...prev, message];\n        });\n      }\n    });\n    newSocket.on('updateConversation', updatedConv => {\n      setConversations(prev => {\n        const existing = prev.find(c => String(c._id) === String(updatedConv._id));\n        if (existing) {\n          const filtered = prev.filter(c => String(c._id) !== String(updatedConv._id));\n          return [updatedConv, ...filtered];\n        }\n        return [updatedConv, ...prev];\n      });\n      if (selectedConversation && String(selectedConversation._id) === String(updatedConv._id)) {\n        setSelectedConversation(updatedConv);\n      }\n    });\n    return () => {\n      if (newSocket) {\n        try {\n          newSocket.off('newMessage');\n          newSocket.off('updateConversation');\n          if (newSocket.connected) {\n            newSocket.disconnect();\n          } else {\n            newSocket.close();\n          }\n        } catch (e) {\n          // no-op\n        }\n      }\n    };\n    // FIXED: This is the source of the \"same name\" bug.\n    // The socket event listeners inside this hook need to know about the currently selected chat.\n    // Without `selectedConversation` in the array, the listeners only ever know the *initial* value (which is null),\n    // causing them to fail or misbehave on real-time updates.\n  }, [token, currentUser === null || currentUser === void 0 ? void 0 : currentUser._id, selectedConversation]);\n  useEffect(() => {\n    if (!selectedConversation) {\n      setMessages([]);\n      return;\n    }\n    const fetchMessages = async () => {\n      try {\n        const res = await apiClient.get(`${API_CONFIG.CHAT.CONVERSATIONS}/${selectedConversation._id}/messages`);\n        if (res.success) {\n          var _res$data3;\n          const messagesData = ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.data) || res.data || [];\n          setMessages(messagesData);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch messages\", err);\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n    if (socketRef.current) {\n      socketRef.current.emit('join', `conversation_${selectedConversation._id}`);\n    }\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.emit('leave', `conversation_${selectedConversation._id}`);\n      }\n    };\n  }, [selectedConversation]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n    const delay = setTimeout(async () => {\n      if (!currentUser) return;\n      try {\n        const res = await apiClient.get(`${API_CONFIG.USERS.SEARCH}?q=${encodeURIComponent(searchQuery)}`);\n        if (res.success) {\n          var _res$data4, _res$data5;\n          const searchData = ((_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.data) || ((_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.users) || res.data || [];\n          const results = searchData.filter(u => String(u._id) !== String(currentUser._id));\n          setSearchResults(uniqueById(results));\n        }\n      } catch (err) {\n        console.error(\"Search users error\", err);\n      }\n    }, 300);\n    return () => clearTimeout(delay);\n  }, [searchQuery, currentUser]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation || !currentUser) return;\n    const tempId = `temp_${Date.now()}`;\n    const optimisticMessage = {\n      _id: tempId,\n      conversationId: selectedConversation._id,\n      sender: {\n        _id: currentUser._id,\n        name: currentUser.name,\n        profileImage: currentUser.profileImage\n      },\n      text: newMessage.trim(),\n      createdAt: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, optimisticMessage]);\n    setNewMessage('');\n    try {\n      const res = await apiClient.post(`${API_CONFIG.CHAT.CONVERSATIONS}/${selectedConversation._id}/messages`, {\n        text: optimisticMessage.text\n      });\n      if (res.success) {\n        var _res$data6;\n        const realMessage = ((_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.data) || res.data;\n        setMessages(prev => {\n          return prev.map(m => m._id === tempId ? realMessage : m);\n        });\n        setConversations(prev => {\n          const updatedConv = {\n            ...selectedConversation,\n            lastMessage: realMessage,\n            updatedAt: new Date().toISOString()\n          };\n          const filtered = prev.filter(c => String(c._id) !== String(selectedConversation._id));\n          return [updatedConv, ...filtered];\n        });\n        setSelectedConversation(prev => ({\n          ...prev,\n          lastMessage: realMessage,\n          updatedAt: new Date().toISOString()\n        }));\n      } else {\n        setMessages(prev => prev.filter(m => m._id !== tempId));\n      }\n    } catch (error) {\n      console.error(\"Failed to send message\", error);\n      setMessages(prev => prev.filter(m => m._id !== tempId));\n    }\n  };\n  const handleSelectUser = async selectedUser => {\n    setSearchQuery('');\n    setSearchResults([]);\n    await createOrOpenConversation(selectedUser._id);\n  };\n\n  // FIXED: Memoized sorting to improve performance\n  const sortedConversations = useMemo(() => {\n    return uniqueById(conversations).sort((a, b) => {\n      var _a$lastMessage, _b$lastMessage;\n      const aTime = ((_a$lastMessage = a.lastMessage) === null || _a$lastMessage === void 0 ? void 0 : _a$lastMessage.createdAt) || a.updatedAt || a.createdAt;\n      const bTime = ((_b$lastMessage = b.lastMessage) === null || _b$lastMessage === void 0 ? void 0 : _b$lastMessage.createdAt) || b.updatedAt || b.createdAt;\n      return new Date(bTime) - new Date(aTime);\n    });\n  }, [conversations]);\n  if (!currentUser) return null;\n  const recipient = selectedConversation === null || selectedConversation === void 0 ? void 0 : (_selectedConversation = selectedConversation.participants) === null || _selectedConversation === void 0 ? void 0 : _selectedConversation.find(p => String(p._id) !== String(currentUser._id));\n  return (\n    /*#__PURE__*/\n    // JSX remains exactly the same as your original, just uses 'sortedConversations'\n    _jsxDEV(\"div\", {\n      className: \"flex h-[calc(100vh-64px)] w-full bg-white dark:bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-full lg:w-1/3 xl:w-1/4 border-r border-gray-200 dark:border-gray-700 flex-col ${selectedConversation ? 'hidden lg:flex' : 'flex'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-gray-900 dark:text-gray-100\",\n            children: \"Alumni Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 dark:text-gray-400\",\n            children: \"Connect with fellow graduates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search alumni...\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              className: \"w-full p-2 pl-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: searchQuery ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: searchResults.length > 0 ? searchResults.map(userResult => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => handleSelectUser(userResult),\n              className: \"p-4 flex items-center gap-4 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userResult.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(userResult.name)}&background=random`,\n                alt: userResult.name,\n                className: \"w-12 h-12 rounded-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-900 dark:text-gray-100\",\n                  children: toTitleCase(userResult.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: [userResult.batch || '', \" \", userResult.branch || '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)]\n            }, userResult._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-4 text-sm text-gray-500\",\n              children: \"No results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : sortedConversations.map(conv => {\n            var _conv$participants, _conv$lastMessage$sen;\n            const otherParticipant = (_conv$participants = conv.participants) === null || _conv$participants === void 0 ? void 0 : _conv$participants.find(p => String(p._id) !== String(currentUser._id));\n            if (!otherParticipant) return null;\n            const isSelected = selectedConversation && String(selectedConversation._id) === String(conv._id);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setSelectedConversation(conv),\n              className: `p-4 flex items-center gap-4 cursor-pointer ${isSelected ? 'bg-blue-600' : 'hover:bg-gray-100 dark:hover:bg-gray-700'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: otherParticipant.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(otherParticipant.name)}&background=random`,\n                alt: otherParticipant.name,\n                className: \"w-12 h-12 rounded-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: `font-semibold truncate ${isSelected ? 'text-white' : 'text-gray-900 dark:text-gray-100'}`,\n                    children: toTitleCase(otherParticipant.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 23\n                  }, this), conv.lastMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-xs text-right mt-1 ${isSelected ? 'text-blue-200' : 'text-gray-500 dark:text-gray-400'}`,\n                    children: format(new Date(conv.lastMessage.createdAt), \"p\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `text-sm truncate ${isSelected ? 'text-blue-100' : 'text-gray-500 dark:text-gray-400'}`,\n                  children: conv.lastMessage ? `${String((_conv$lastMessage$sen = conv.lastMessage.sender) === null || _conv$lastMessage$sen === void 0 ? void 0 : _conv$lastMessage$sen._id) === String(currentUser._id) ? \"You: \" : \"\"}${conv.lastMessage.text}` : \"No messages yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, conv._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-1 flex-col ${selectedConversation ? 'flex' : 'hidden lg:flex'}`,\n        children: selectedConversation && recipient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedConversation(null),\n                className: \"lg:hidden p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\",\n                children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n                  className: \"w-5 h-5 text-gray-600 dark:text-gray-300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 151\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipient.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(recipient.name)}&background=random`,\n                alt: recipient.name,\n                className: \"w-10 h-10 rounded-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"font-semibold text-gray-900 dark:text-gray-100\",\n                  children: toTitleCase(recipient.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: [recipient.batch || '', \" \", recipient.branch || '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\",\n                children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n                  className: \"w-5 h-5 text-gray-600 dark:text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 95\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-4xl mx-auto space-y-4\",\n              children: [messages.map(message => {\n                var _message$sender;\n                const isMine = String((_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender._id) === String(currentUser._id);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex items-end w-full gap-2 ${isMine ? 'justify-end' : 'justify-start'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `max-w-xs lg:max-w-md p-3 rounded-2xl ${isMine ? 'bg-blue-500 text-white rounded-br-none' : 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border dark:border-gray-600 rounded-bl-none'}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm\",\n                      children: message.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: `text-xs text-right mt-1 ${isMine ? 'text-blue-200' : 'text-gray-400 dark:text-gray-500'}`,\n                      children: format(new Date(message.createdAt), 'p')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this)\n                }, message._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-4xl mx-auto flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => e.key === 'Enter' && !e.shiftKey && (e.preventDefault(), handleSendMessage()),\n                placeholder: \"Type a message...\",\n                className: \"flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-2xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\",\n                rows: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSendMessage,\n                disabled: !newMessage.trim(),\n                className: \"p-3 rounded-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white disabled:opacity-50 disabled:cursor-not-allowed\",\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-900\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-8\",\n            children: [/*#__PURE__*/_jsxDEV(GraduationCap, {\n              className: \"w-24 h-24 mx-auto mb-6 text-blue-300 dark:text-blue-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-gray-800 dark:text-gray-100\",\n              children: \"Welcome to Alumni Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 dark:text-gray-400\",\n              children: \"Select a conversation or search for an alum to start chatting.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Chat, \"V0rSFa4xgUBoRCxX3aadeMi5Q5s=\", false, function () {\n  return [useAuth, useSearchParams, useLocation, useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Search","Send","MoreVertical","ArrowLeft","GraduationCap","useAuth","useSearchParams","useLocation","useNavigate","apiClient","API_CONFIG","io","format","jsxDEV","_jsxDEV","Fragment","_Fragment","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","uniqueById","arr","seen","Set","filter","item","_id","id","String","has","add","Chat","_s","_location$state4","_selectedConversation","user","currentUser","token","searchParams","setSearchParams","location","navigate","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","newMessage","setNewMessage","searchQuery","setSearchQuery","searchResults","setSearchResults","loading","setLoading","handledUserParamRef","socketRef","messagesEndRef","fetchConversations","res","get","CHAT","CONVERSATIONS","success","_res$data","conversationsData","data","uniqueConversations","error","console","createOrOpenConversation","userId","warn","post","CREATE_CONVERSATION","recipientId","_res$data2","conv","prev","existing","find","c","filtered","_location$state","state","current","existingConversation","Array","isArray","participants","some","p","_location$state2","pathname","_location$state3","connected","disconnect","close","e","newSocket","BASE_URL","auth","transports","reconnection","reconnectionAttempts","on","log","emit","message","conversationId","exists","m","updatedConv","off","fetchMessages","_res$data3","messagesData","err","_messagesEndRef$curre","scrollIntoView","behavior","trim","delay","setTimeout","USERS","SEARCH","encodeURIComponent","_res$data4","_res$data5","searchData","users","results","u","clearTimeout","handleSendMessage","tempId","Date","now","optimisticMessage","sender","name","profileImage","text","createdAt","toISOString","_res$data6","realMessage","map","lastMessage","updatedAt","handleSelectUser","selectedUser","sortedConversations","sort","a","b","_a$lastMessage","_b$lastMessage","aTime","bTime","recipient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","length","userResult","onClick","src","alt","batch","branch","_conv$participants","_conv$lastMessage$sen","otherParticipant","isSelected","_message$sender","isMine","ref","onKeyPress","key","shiftKey","preventDefault","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/arvin/OneDrive/Desktop/project2/alumni-verse/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'; // ADDED useMemo\nimport { Search, Send, MoreVertical, ArrowLeft, GraduationCap } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom';\nimport apiClient from '../utils/api';\nimport { API_CONFIG } from '../config/config';\nimport io from 'socket.io-client';\nimport { format } from 'date-fns';\n\nconst toTitleCase = (str) => {\n  if (!str) return '';\n  return str.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n};\n\nconst uniqueById = (arr) => {\n  const seen = new Set();\n  return arr.filter((item) => {\n    if (!item || !item._id) return false;\n    const id = String(item._id);\n    if (seen.has(id)) return false;\n    seen.add(id);\n    return true;\n  });\n};\n\nconst Chat = () => {\n  const { user: currentUser, token } = useAuth();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handledUserParamRef = useRef(false);\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  const fetchConversations = useCallback(async () => {\n    setLoading(true);\n    try {\n      const res = await apiClient.get(API_CONFIG.CHAT.CONVERSATIONS);\n      if (res.success) {\n        const conversationsData = res.data?.data || res.data || [];\n        const uniqueConversations = uniqueById(conversationsData);\n        setConversations(uniqueConversations);\n        return uniqueConversations;\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch conversations\", error);\n    } finally {\n      setLoading(false);\n    }\n    return [];\n  }, []);\n\n  useEffect(() => {\n    fetchConversations();\n  }, [fetchConversations]);\n\n  const createOrOpenConversation = useCallback(async (userId) => {\n    try {\n      if (String(userId) === String(currentUser?._id)) {\n        console.warn('Attempted to start a conversation with self; ignoring.');\n        return null;\n      }\n      const res = await apiClient.post(API_CONFIG.CHAT.CREATE_CONVERSATION, { recipientId: userId });\n      if (res.success) {\n        const conv = res.data?.data || res.data;\n        setSelectedConversation(conv);\n        setConversations(prev => {\n          const existing = prev.find(c => String(c._id) === String(conv._id));\n          if (existing) {\n            const filtered = prev.filter(c => String(c._id) !== String(conv._id));\n            return [conv, ...filtered];\n          }\n          return [conv, ...prev];\n        });\n        return conv;\n      }\n    } catch (error) {\n      console.error('Error creating/opening conversation', error);\n    }\n    return null;\n  }, [currentUser?._id]); // FIXED: Added missing dependency\n\n  useEffect(() => {\n    const userId = searchParams.get('user') || location.state?.user;\n    if (!userId) return;\n    if (!currentUser) return;\n    if (handledUserParamRef.current) return;\n    if (loading) return;\n    \n    handledUserParamRef.current = true;\n\n    const existingConversation = conversations.find(conv =>\n      Array.isArray(conv.participants) && conv.participants.some(p => String(p._id) === String(userId))\n    );\n\n    if (existingConversation) {\n      setSelectedConversation(existingConversation);\n      setSearchParams({});\n      if (location.state?.user) {\n        navigate(location.pathname, { replace: true, state: {} });\n      }\n      return;\n    }\n\n    (async () => {\n      const conv = await createOrOpenConversation(userId);\n      if (conv) {\n        setSearchParams({});\n        if (location.state?.user) {\n          navigate(location.pathname, { replace: true, state: {} });\n        }\n      } else {\n        handledUserParamRef.current = false;\n      }\n    })();\n  }, [searchParams, currentUser, conversations, loading, createOrOpenConversation, setSearchParams, location.pathname, location.state?.user, navigate]);\n\n  useEffect(() => {\n    if (!token) return;\n    \n    if (socketRef.current) {\n      try {\n        if (socketRef.current.connected) {\n          socketRef.current.disconnect();\n        } else {\n          socketRef.current.close();\n        }\n      } catch (e) {\n        // no-op\n      }\n    }\n    \n    const newSocket = io(API_CONFIG.BASE_URL, {\n      auth: { token },\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n    });\n    socketRef.current = newSocket;\n\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n      if (currentUser?._id) {\n        newSocket.emit('join', `user_${currentUser._id}`);\n      }\n    });\n\n    newSocket.on('newMessage', (message) => {\n      if (selectedConversation && String(message.conversationId) === String(selectedConversation._id)) {\n        setMessages(prev => {\n          const exists = prev.find(m => String(m._id) === String(message._id));\n          if (exists) return prev;\n          return [...prev, message];\n        });\n      }\n    });\n\n    newSocket.on('updateConversation', (updatedConv) => {\n      setConversations(prev => {\n        const existing = prev.find(c => String(c._id) === String(updatedConv._id));\n        if (existing) {\n          const filtered = prev.filter(c => String(c._id) !== String(updatedConv._id));\n          return [updatedConv, ...filtered];\n        }\n        return [updatedConv, ...prev];\n      });\n      \n      if (selectedConversation && String(selectedConversation._id) === String(updatedConv._id)) {\n        setSelectedConversation(updatedConv);\n      }\n    });\n\n    return () => {\n      if (newSocket) {\n        try {\n          newSocket.off('newMessage');\n          newSocket.off('updateConversation');\n          if (newSocket.connected) {\n            newSocket.disconnect();\n          } else {\n            newSocket.close();\n          }\n        } catch (e) {\n          // no-op\n        }\n      }\n    };\n    // FIXED: This is the source of the \"same name\" bug.\n    // The socket event listeners inside this hook need to know about the currently selected chat.\n    // Without `selectedConversation` in the array, the listeners only ever know the *initial* value (which is null),\n    // causing them to fail or misbehave on real-time updates.\n  }, [token, currentUser?._id, selectedConversation]); \n\n  useEffect(() => {\n    if (!selectedConversation) {\n      setMessages([]);\n      return;\n    }\n\n    const fetchMessages = async () => {\n      try {\n        const res = await apiClient.get(`${API_CONFIG.CHAT.CONVERSATIONS}/${selectedConversation._id}/messages`);\n        if (res.success) {\n          const messagesData = res.data?.data || res.data || [];\n          setMessages(messagesData);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch messages\", err);\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n\n    if (socketRef.current) {\n      socketRef.current.emit('join', `conversation_${selectedConversation._id}`);\n    }\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.emit('leave', `conversation_${selectedConversation._id}`);\n      }\n    };\n  }, [selectedConversation]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setSearchResults([]);\n      return;\n    }\n\n    const delay = setTimeout(async () => {\n      if (!currentUser) return;\n      try {\n        const res = await apiClient.get(`${API_CONFIG.USERS.SEARCH}?q=${encodeURIComponent(searchQuery)}`);\n        if (res.success) {\n          const searchData = res.data?.data || res.data?.users || res.data || [];\n          const results = searchData.filter(u => String(u._id) !== String(currentUser._id));\n          setSearchResults(uniqueById(results));\n        }\n      } catch (err) {\n        console.error(\"Search users error\", err);\n      }\n    }, 300);\n\n    return () => clearTimeout(delay);\n  }, [searchQuery, currentUser]);\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation || !currentUser) return;\n\n    const tempId = `temp_${Date.now()}`;\n    const optimisticMessage = {\n      _id: tempId,\n      conversationId: selectedConversation._id,\n      sender: { _id: currentUser._id, name: currentUser.name, profileImage: currentUser.profileImage },\n      text: newMessage.trim(),\n      createdAt: new Date().toISOString(),\n    };\n\n    setMessages(prev => [...prev, optimisticMessage]);\n    setNewMessage('');\n\n    try {\n      const res = await apiClient.post(`${API_CONFIG.CHAT.CONVERSATIONS}/${selectedConversation._id}/messages`, { text: optimisticMessage.text });\n      if (res.success) {\n        const realMessage = res.data?.data || res.data;\n        setMessages(prev => {\n          return prev.map(m => (m._id === tempId ? realMessage : m));\n        });\n\n        setConversations(prev => {\n          const updatedConv = {\n            ...selectedConversation,\n            lastMessage: realMessage,\n            updatedAt: new Date().toISOString()\n          };\n          \n          const filtered = prev.filter(c => String(c._id) !== String(selectedConversation._id));\n          return [updatedConv, ...filtered];\n        });\n\n        setSelectedConversation(prev => ({\n          ...prev,\n          lastMessage: realMessage,\n          updatedAt: new Date().toISOString()\n        }));\n      } else {\n        setMessages(prev => prev.filter(m => m._id !== tempId));\n      }\n    } catch (error) {\n      console.error(\"Failed to send message\", error);\n      setMessages(prev => prev.filter(m => m._id !== tempId));\n    }\n  };\n\n  const handleSelectUser = async (selectedUser) => {\n    setSearchQuery('');\n    setSearchResults([]);\n    await createOrOpenConversation(selectedUser._id);\n  };\n  \n  // FIXED: Memoized sorting to improve performance\n  const sortedConversations = useMemo(() => {\n    return uniqueById(conversations)\n      .sort((a, b) => {\n        const aTime = a.lastMessage?.createdAt || a.updatedAt || a.createdAt;\n        const bTime = b.lastMessage?.createdAt || b.updatedAt || b.createdAt;\n        return new Date(bTime) - new Date(aTime);\n      });\n  }, [conversations]);\n\n  if (!currentUser) return null;\n\n  const recipient = selectedConversation?.participants?.find(p => String(p._id) !== String(currentUser._id));\n\n  return (\n    // JSX remains exactly the same as your original, just uses 'sortedConversations'\n    <div className=\"flex h-[calc(100vh-64px)] w-full bg-white dark:bg-gray-800\">\n      <div className={`w-full lg:w-1/3 xl:w-1/4 border-r border-gray-200 dark:border-gray-700 flex-col ${selectedConversation ? 'hidden lg:flex' : 'flex'}`}>\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Alumni Network</h1>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Connect with fellow graduates</p>\n          <div className=\"relative mt-4\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search alumni...\"\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              className=\"w-full p-2 pl-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n            />\n          </div>\n        </div>\n        <div className=\"flex-1 overflow-y-auto\">\n          {searchQuery ? (\n            <>\n              {searchResults.length > 0 ? (\n                searchResults.map(userResult => (\n                  <div key={userResult._id} onClick={() => handleSelectUser(userResult)} className=\"p-4 flex items-center gap-4 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\">\n                    <img src={userResult.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(userResult.name)}&background=random`} alt={userResult.name} className=\"w-12 h-12 rounded-full object-cover\" />\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">{toTitleCase(userResult.name)}</h3>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">{userResult.batch || ''} {userResult.branch || ''}</p>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p className=\"p-4 text-sm text-gray-500\">No results</p>\n              )}\n            </>\n          ) : (\n            sortedConversations.map((conv) => {\n              const otherParticipant = conv.participants?.find(p => String(p._id) !== String(currentUser._id));\n              if (!otherParticipant) return null;\n\n              const isSelected = selectedConversation && String(selectedConversation._id) === String(conv._id);\n              return (\n                <div\n                  key={conv._id}\n                  onClick={() => setSelectedConversation(conv)}\n                  className={`p-4 flex items-center gap-4 cursor-pointer ${isSelected ? 'bg-blue-600' : 'hover:bg-gray-100 dark:hover:bg-gray-700'}`}\n                >\n                  <img src={otherParticipant.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(otherParticipant.name)}&background=random`} alt={otherParticipant.name} className=\"w-12 h-12 rounded-full object-cover\" />\n                  <div className=\"flex-1 overflow-hidden\">\n                    <div className=\"flex justify-between items-center\">\n                      <h3 className={`font-semibold truncate ${isSelected ? 'text-white' : 'text-gray-900 dark:text-gray-100'}`}>{toTitleCase(otherParticipant.name)}</h3>\n                      {conv.lastMessage && (\n                        <p className={`text-xs text-right mt-1 ${isSelected ? 'text-blue-200' : 'text-gray-500 dark:text-gray-400'}`}>\n                          {format(new Date(conv.lastMessage.createdAt), \"p\")}\n                        </p>\n                      )}\n                    </div>\n                    <p className={`text-sm truncate ${isSelected ? 'text-blue-100' : 'text-gray-500 dark:text-gray-400'}`}>\n                      {conv.lastMessage ? `${String(conv.lastMessage.sender?._id) === String(currentUser._id) ? \"You: \" : \"\"}${conv.lastMessage.text}` : \"No messages yet\"}\n                    </p>\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n      <div className={`flex-1 flex-col ${selectedConversation ? 'flex' : 'hidden lg:flex'}`}>\n        {selectedConversation && recipient ? (\n          <>\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n              <div className=\"flex items-center gap-3\">\n                <button onClick={() => setSelectedConversation(null)} className=\"lg:hidden p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\"><ArrowLeft className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" /></button>\n                <img src={recipient.profileImage || `https://ui-avatars.com/api/?name=${encodeURIComponent(recipient.name)}&background=random`} alt={recipient.name} className=\"w-10 h-10 rounded-full object-cover\" />\n                <div>\n                  <h2 className=\"font-semibold text-gray-900 dark:text-gray-100\">{toTitleCase(recipient.name)}</h2>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">{recipient.batch || ''} {recipient.branch || ''}</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full\"><MoreVertical className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" /></button>\n              </div>\n            </div>\n            <div className=\"flex-1 overflow-y-auto p-4\">\n              <div className=\"max-w-4xl mx-auto space-y-4\">\n                {messages.map(message => {\n                  const isMine = String(message.sender?._id) === String(currentUser._id);\n                  return (\n                    <div key={message._id} className={`flex items-end w-full gap-2 ${isMine ? 'justify-end' : 'justify-start'}`}>\n                      <div className={`max-w-xs lg:max-w-md p-3 rounded-2xl ${isMine ? 'bg-blue-500 text-white rounded-br-none' : 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border dark:border-gray-600 rounded-bl-none'}`}>\n                        <p className=\"text-sm\">{message.text}</p>\n                        <p className={`text-xs text-right mt-1 ${isMine ? 'text-blue-200' : 'text-gray-400 dark:text-gray-500'}`}>{format(new Date(message.createdAt), 'p')}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n                <div ref={messagesEndRef} />\n              </div>\n            </div>\n            <div className=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4\">\n              <div className=\"max-w-4xl mx-auto flex items-center gap-3\">\n                <textarea\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && (e.preventDefault(), handleSendMessage())}\n                  placeholder=\"Type a message...\"\n                  className=\"flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-2xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n                  rows={1}\n                />\n                <button onClick={handleSendMessage} disabled={!newMessage.trim()} className=\"p-3 rounded-full bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white disabled:opacity-50 disabled:cursor-not-allowed\">\n                  <Send className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-900\">\n            <div className=\"text-center p-8\">\n              <GraduationCap className=\"w-24 h-24 mx-auto mb-6 text-blue-300 dark:text-blue-700\" />\n              <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">Welcome to Alumni Network</h2>\n              <p className=\"text-gray-600 dark:text-gray-400\">Select a conversation or search for an alum to start chatting.</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}